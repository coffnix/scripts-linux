#!/bin/bash
#
# Script para backup do zimbra
# hackstore.com.br
#
DATA=$(date +%Y-%m-%d)
ROOTDIR="/backup"
MNTDIR="/backup/mnt"
#BKPDIR="${MNTDIR}/files/zimbra-full"
BKPDIR="${ROOTDIR}/files/zimbra-full"
LOGDIR="${ROOTDIR}/log"
ZIMBRADIR="/opt/zimbra"
TMPDIR="/backup/zimbra-tmp"
FIREWALL="$ROOTDIR/firewall"
ERRORLOG="${LOGDIR}/zimbra-error.log"
MAILSCRIPT="$ROOTDIR/bin/mail.py"
BKPLOG="${LOGDIR}/zimbra-bkplog.log"
LOGMAIL="${LOGDIR}/zimbra-mailpy.log"
FALHA="FALHA"
FILIAL="zimbra-area31"
ERROR=0;
FALHA="FALHA"

ZMPROV="/opt/zimbra/bin/zmprov"
ZMMAILBOX="/opt/zimbra/bin/zmmailbox"
#DIR_DEST="${MNTDIR}/files/contas-zimbra/${DATA}"
DIR_DEST="${ROOTDIR}/files/contas-zimbra/${DATA}"
DATABASEDIR="${ROOTDIR}/files/databases"
BKPLDAPDIR="${DATABASEDIR}/${DATA}/ldap"
BKPMYSQLDIR="${DATABASEDIR}/${DATA}/mysql"

LOCK="${LOGDIR}/lock-zimbra.lock"

SRV_REMOTE="192.168.0.55:/backup/clientes/${FILIAL}"

##@@@@@@@@@@@@@@@@@@##
LIMPEZA="1"
BACKUP_DATABASES="1"
BACKUP_CONTAS="1"
BACKUP_FULL="1"
BACKUP_LOCAL="1"
ENVIO_REMOTO="0"
##@@@@@@@@@@@@@@@@@@##

##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##
## Funções de envio para email

#        {
#        echo -e "Falha de rotina de backup. Outro processo encontra-se em execucao:\n\n $(ps hu -C backup-zimbra)" |python $MAILSCRIPT  "$FALHA no backup - Rotina de backup recorrente `date`" && echo -e "`date` - Email de falha disparado com sucesso para HACKSTORE.\n--------------------\n\n"
#        }  >> $LOGMAIL 2>&1

##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##

#        cat $ERRORLOG | python $MAILSCRIPT "$FALHA ao compactar arquivos do diretorio etc. `date`";

##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##

#{
#if [ "$ERROR" -eq 0 ]; then
#       python $MAILSCRIPT  "$SUCESSO no backup `date`" && echo -e "`date` - [OK] email disparado com sucesso para HACKSTORE.\n--------------------\n\n"
#fi
#} >> $LOGMAIL 2>&1

##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##

#####################################################################################################
# Inicio backup Zimbra
echo -e "\n\n###########################################################################" >> $BKPLOG
echo -e "\n$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Iniciando backup Zimbra..." >> $BKPLOG

#####################################
# interrompe o backup caso haja um lock
if [ -e ${LOCK} ]; then
	echo -e "Falha de rotina de backup. Outro processo encontra-se em execucao:\n\n"
	echo -e "\n\n$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): FALHA DE ROTINA DE BACKUP. OUTRO PROCESSO ENCONTRA-SE EM EXECUÇÃO.\n" >> $BKPLOG
	exit 1
fi
#####################################
# criando LOCK
touch ${LOCK}

#####################################
# Criando diretórios caso não existam:
if [ ! -d ${LOGDIR} ]; then
    mkdir -p ${LOGDIR}
fi

####################################################################################################################################
# Remove arquivos antigos de backup
if [ "${LIMPEZA}" = "1" ]; then
	
	echo -e "\n$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Removendo arquivos antigos de backup..." >> $BKPLOG
	# Limpeza de backup full
	find ${BKPDIR} -type f -iname "*-bkp_zimbra.tar.bz2" -ctime +7 -exec rm -f {} \;
	
	# bLimpeza de backup Local
	find ${ROOTDIR}/files/local -type f -iname "confs-bkp_linux*.tar.bz2" -mtime +45 -exec rm -f {} \;
	
	# Limpeza de backup das contas
	find ${ROOTDIR}/files/contas-zimbra -type f -ctime +10 -exec rm -f {} \;
	
	# Limpeza de backup das databases
	find ${DATABASEDIR} -type f -iname "ldap*" -mtime +15 -exec rm -f {} \;
	find ${DATABASEDIR} -type f -iname "dump-full-*" -mtime +15 -exec rm -f {} \;
	
	# Limpeza de diretorios vazios
	rmdir ${BKPDIR}/* 2> /dev/null
	rmdir ${DATABASEDIR}/* 2> /dev/null
	rmdir ${ROOTDIR}/files/contas-zimbra/* 2> /dev/null
	
	echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Finalizada limpeza dos arquivos antigos de backup.\n" >> $BKPLOG
	
	#### Cria diretorios necessários após limpeza
	if [ ! -d ${TMPDIR} ]; then
	    mkdir -p ${TMPDIR}
	fi
	#####################################

fi

####################################################################################################################################
if [ "${BACKUP_DATABASES}" = "1" ]; then
	#### Cria diretorios necessarios
	if [ ! -d ${BKPLDAPDIR}/conf ]; then
	    mkdir -p ${BKPLDAPDIR}/conf
	fi
	
	if [ ! -d ${BKPMYSQLDIR} ]; then
	    mkdir -p ${BKPMYSQLDIR}
	fi
	#####################################	
	# Backup LDAP
	echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Realizando backup da conf do LDAP..." >> ${BKPLOG}
	chown zimbra. -R $BKPLDAPDIR 2> $ERRORLOG
	if [ "$?" -ne 0 ]; then
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO CORRIGIR PERMISSÃO DO DIR. $BKPLDAPDIR\n" >> $BKPLOG
	        ERROR=1;
	fi
	
	su - zimbra -c "/opt/zimbra/libexec/zmslapcat -c $BKPLDAPDIR/conf" 2> $ERRORLOG
	if [ "$?" -ne 0 ]; then
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO REALIZAR BACKUP DA CONF DO LDAP\n" >> $BKPLOG
	        ERROR=1;
	else
		echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): OK - BACKUP DA CONF DO LDAP\n" >> $BKPLOG
	fi
	
	echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Realizando dump do LDAP..." >> ${BKPLOG}
	su - zimbra -c "/opt/zimbra/libexec/zmslapcat $BKPLDAPDIR" 2> $ERRORLOG
	if [ "$?" -ne 0 ]; then
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO EXPORTAR DUMP FULL LDAP\n" >> $BKPLOG
	        ERROR=1;
	else
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): OK - DUMP FULL DO LDAP\n" >> $BKPLOG
	fi
	
	############################################################################################
	# Backup MYSQL
	echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Realizando dump do MYSQL..." >> ${BKPLOG}
	chown zimbra. -R $BKPMYSQLDIR
	
	su - zimbra -c "/backup/bin/dump-mysql-zimbra.sh $BKPMYSQLDIR/dump-full-$DATA.sql" 2> $ERRORLOG
	if [ "$?" -ne 0 ]; then
	    echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO EXPORTAR DUMP MYSQL\n" >> $BKPLOG
	        ERROR=1;
	else
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): OK - DUMP FULL DO MYSQL\n" >> $BKPLOG
	fi
	
	# comprime dump
	echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Compactando dump do MYSQL..." >> ${BKPLOG}
	bzip2 $BKPMYSQLDIR/dump-full-$DATA.sql 2> $ERRORLOG
	if [ "$?" -ne 0 ]; then
	    echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO COMPACTAR DUMP MYSQL\n" >> $BKPLOG
	        ERROR=1;
	else
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): OK - COMPACTADO DUMP FULL DO MYSQL\n" >> $BKPLOG
	fi
fi

####################################################################################################################################
if [ "${BACKUP_CONTAS}" = "1" ]; then
	#### Cria diretorios necessarios
	if [ ! -d  ${ROOTDIR}/files/contas-zimbra ]; then
	    mkdir -p  ${ROOTDIR}/files/contas-zimbra
	fi
	#####################################
	
	# Backup de contas individuais
	mkdir -p ${DIR_DEST}
	for MAIL in $($ZMPROV -l gaa | sort);  do
		echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Realizando backup da conta ${MAIL}" >> ${BKPLOG}
		time $ZMMAILBOX -z -m ${MAIL} getRestURL "//?fmt=tgz" > ${DIR_DEST}/${MAIL}.tgz 2> $ERRORLOG
			if [ "$?" -ne 0 ]; then
				echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO REALIZAR BACKUP DE EMAIL ${MAIL}" >> $BKPLOG
			        ERROR=1;
			fi
	
	done
	
	
	if [ "$?" -ne 0 ]; then
	    echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO REALIZAR BACKUP DE EMAIL ZIMBRA\n" >> $BKPLOG
	    ERROR=1;
	else
	    echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): OK - BACKUP DE CONTA INDIVIDUAL DE EMAIL ZIMBRA REALIZADO COM SUCESSO\n" >> $BKPLOG
	fi
	
fi
####################################################################################################################################
if [ "${BACKUP_FULL}" = "1" ]; then
	#### Cria diretorios necessarios
	if [ ! -d ${BKPDIR} ]; then
	    mkdir -p ${BKPDIR}
	fi
	
	if [ ! -d ${DIR_DEST} ]; then
	    mkdir -p ${DIR_DEST}
	fi
	#####################################

	### faz um sync com zimbra rodando pra reduzir downtime do serviço de emails durante o backup
	echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Iniciando primeiro RSYNC do dir. /opt/zimbra com Zimbra rodando..." >> $BKPLOG
	rsync -azvh --delete ${ZIMBRADIR} ${TMPDIR} --exclude "zimbra/data/ldap" --exclude "zimbra-tmp" --exclude "zibra/db/data" 2> $ERRORLOG
	
	####################################################################################################################################
	# Parando Zimbra para backup
	echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Parando Zimbra para backup...\n" >> ${BKPLOG}
	/etc/init.d/zimbra stop >> ${BKPLOG} 2> ${ERRORLOG}
	
	### Kill any orphaned Zimbra processes
	pkill -9 -u zimbra
	
	echo -e "\n$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Zimbra parou para backup" >> ${BKPLOG}
	
	## Sync new files 
	echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Iniciando último RSYNC do dir. /opt/zimbra com Zimbra parado..." >> $BKPLOG
	rsync -azvh --delete ${ZIMBRADIR} ${TMPDIR} --exclude "zimbra-tmp" 2> $ERRORLOG
	if [ "$?" -gt 1 ]; then
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO SINCRONIZAR /opt/zimbra.\n" >> $BKPLOG
	        ERROR=1;
	else
		echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): OK - SINCRONIZADO /opt/zimbra.\n" >> $BKPLOG
	fi
	
	####################################################################################################################################
	
	### Iniciando processo do Zimbra ###
	sleep 3
	echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Iniciando Zimbra...\n" >> ${BKPLOG}
	/etc/init.d/zimbra start >> ${BKPLOG} 2> $ERRORLOG
	if [ "$?" -gt 1 ]; then
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO INICIAR ZIMBRA\n" >> $BKPLOG
	        ERROR=1;
	else
		echo -e "\n$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): OK - Zimbra iniciado\n" >> ${BKPLOG}
	fi
	####################################################################################################################################

	### Compactando /opt/zimbra ###
	mkdir -p ${BKPDIR}/${DATA}
	echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Compactando dir. /opt/zimbra..." >> ${BKPLOG}
	cd /
	tar -cjpf ${BKPDIR}/${DATA}/full-bkp_zimbra.tar.bz2 .${TMPDIR} 2> $ERRORLOG
	if [ "$?" -ne 0 ]; then
		echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO COMPACTAR DIR /opt/zimbra\n" >> $BKPLOG
	        ERROR="1"
	else
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): OK - COMPACTADO DIR /opt/zimbra\n" >> $BKPLOG
	fi
	

fi

####################################################################################################################################
# backup da conf do Linux
if [ "${BACKUP_LOCAL}" = "1" ]; then
	#### Cria diretorios necessarios
	if [ ! -d ${ROOTDIR}/files/local ]; then
	    mkdir -p ${ROOTDIR}/files/local
	fi
	#####################################
	
	echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Realizando backup da conf do Linux..." >> ${BKPLOG}
	cd /
	tar -cjpf ${ROOTDIR}/files/local/confs-bkp_linux-${DATA}.tar.bz2 ./etc ./backup/bin ./backup/files/databases 2> $ERRORLOG
	if [ "$?" -ne 0 ]; then
		echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO COMPACTAR CONF DO LINUX\n" >> $BKPLOG
	        ERROR="1"
	else
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): OK - COMPACTADO CONF DO LINUX\n" >> $BKPLOG
	fi

fi

####################################################################################################################################

if [ "${ENVIO_REMOTO}" = "1" ]; then
## envia backup para servidor remoto
        echo -e "\n$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Iniciando envio do backup para servidor remoto..." >> $BKPLOG
	rsync -azvhHK --delete ${ROOTDIR} root@${SRV_REMOTE} --exclude "backup/logs" --exclude "backup/zimbra-tmp" 2> $ERRORLOG
	if [ "$?" -gt 1 ]; then
	        cat $ERRORLOG | python $MAILSCRIPT "$FALHA ao sincronizar databases do zimbra. `date`";
	        ERROR="1"
	   
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): ERRO AO ENVIAR BACKUP PARA SERVIDOR REMOTO\n" >> $BKPLOG
	else
	        echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): OK - ENVIADO COM SUCESSO BACKUP PARA SERVIDOR REMOTO\n" >> $BKPLOG
	fi
fi

####################################################################################################################################
# Removendo lock
echo -e "$(date +'%Y-%m-%d') - $(date +'%H:%M:%S'): Finalizando backup Zimbra.\n" >> $BKPLOG
rm  $LOCK


### Limpando swap ###
bash /backup/bin/clear-cache.sh

#####################################

####################################################################################################################################
## Montagem NFS
#mount /nfs/backup-zimbra
#if [ $? -gt 0 ]; then
#    echo -e "ERRO AO MONTAR O COMPARTILHAMENTO NFS.\n" >> $BKPLOG;
#    cat $ERRORLOG | python $MAILSCRIPT "$FALHA ao montar NFS. `date`";
#    ERROR=1;
#    exit 1
#fi
#
#umount /nfs/backup-zimbra
#umount ${MNTDIR}
##mount.cifs //192.168.0.223/bkpmail ${MNTDIR} -o 'user=backup,password=area31@123,domain=area31,hard,nosetuids,noperm'
#
#if [ $? -gt 0 ]; then
#    echo -e "ERRO AO MONTAR O COMPARTILHAMENTO CIFS.\n" >> $BKPLOG;
#    cat $ERRORLOG | python $MAILSCRIPT "$FALHA ao montar CIFS. `date`";
#    ERROR=1;
#    exit 1
#fi
#
##################################################################/etc/init.d/zimbra start >> ${BKPLOG} 2> ${ERRORLOG}
#if [ "$NDAY" = "08" -o  "$NDAY" = "13" -o  "$NDAY" = "23" ]; then
#echo -e "####################\nestado do servidor no ato do erro:\n\nmemoria:$(free -m)\n\n$(uptime)\n####################" >> $BKPLOG

## Fim
